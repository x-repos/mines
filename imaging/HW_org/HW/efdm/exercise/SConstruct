## 
# GPGN658 - elastic FD modeling 
##
from rsf.proj import *
import awe,geom,wplot,pcsutil,stiffness

# ------------------------------------------------------------
par = dict(
    nx=600,  ox=0, dx=0.002,  lx='x', ux='km',
    ny=1,    oy=0, dy=0.002,  ly='y', uy='km',
    nz=350,  oz=0, dz=0.002,  lz='z', uz='km',
    nt=8001, ot=0, dt=0.0002, lt='t', ut='s',
    kt=150,nb=250,jsnap=100,frq=30
    )
awe.param(par)
wplot.param(par)

# ------------------------------------------------------------
# elastic source
awe.wavelet('tmp',par['frq'],'',par)
Flow('one','tmp','window squeeze=n | math output="input*(+1)"')
Flow('two','tmp','window squeeze=n | math output="input*( 0)"')
Flow('wav',['one','two'],
     '''
     cat axis=1 space=n ${SOURCES[1]} |
     transp plane=23 |
     transp plane=12 | 
     put label1="" unit1="" label2="" unit2="" 
     ''')
wplot.waveplotE2d('wav','',par)
     
# ------------------------------------------------------------
# source coordinates
par['xsou']=par['ox']+par['nx']/2*par['dx']
par['zsou']=par['oz']+10*par['dz']
geom.point2d('ss',par['xsou'],par['zsou'],'',par)

# receiver coordinates
par['zrec']=par['oz']+10*par['dz']
geom.horizontal2d('rr',par['zrec'],'',par)

# plots
Plot('ss',wplot.ssplot2d('',par))
Plot('rr',wplot.rrplot2d('',par))

# ------------------------------------------------------------
pcsutil.angline('dip',
                0.1,par['ox'],
                +45,
                0,1,
                par['nz']  ,par['oz'],par['dz'],
                par['nx']/2,par['ox'],par['dx'])
Flow('rev','dip','reverse which=2 opt=i')
Flow('con','dip','math output=0')

# ------------------------------------------------------------
# Density (kg/km^3)
Flow('ro',['dip','con'],
     'cat axis=2 space=n ${SOURCES[1]} | add add=1 | reverse which=2 opt=i'%par)
Flow('roCON','ro','math output=1')

# P velocity (km/s)
Flow('vp',['dip','con'],
     'cat axis=2 space=n ${SOURCES[1]} | add add=2'%par)
Flow('vpCON','vp','math output=2')

# S velocity (km/s)
Flow('vs',['dip','con'],
     'cat axis=2 space=n ${SOURCES[1]} | add add=1'%par)
Flow('vsCON','vs','math output=1.5')

# plots
for i in (['vp','vs','ro']):
    Plot(i,wplot.igrey2d('mean=y',par))
    Result(i,[i,'rr','ss'],'Overlay')

# ------------------------------------------------------------
# stiffness tensor
stiffness.iso2d('cc','vp','vs','ro',par)

# ------------------------------------------------------------
# elastic FDM
def efdm(dat,wfl,wav,sti,den,sou,rec,custom,par):    
    Flow( [dat,wfl],[wav,sti,den,sou,rec],
          '''
          ./CODE/sfEFDM
          verb=y dabc=y snap=y jsnap=%(jsnap)d nb=%(nb)d 
          ccc=${SOURCES[1]}
          den=${SOURCES[2]}
          sou=${SOURCES[3]}
          rec=${SOURCES[4]}
          wfl=${TARGETS[1]}
          '''%par + custom)

efdm('dat','wfl','wav','cc','ro','ss','rr','',par)
efdm('dpo','wpo','wav','cc','ro','ss','rr','opot=y',par)

# ------------------------------------------------------------
for i in (['dat','dpo']):
    Flow(i+'byt',i,wplot.gainall('pclip=97',par))
    wplot.dgreyE2d(i,i+'byt','',par,xscale=1.25)
    Result(i,i,'Overlay')

par['nfrm']=int((par['nt']-1)/par['jsnap'])

for i in (['wfl','wpo']):
    Flow(i+'byt',i,wplot.gainall('pclip=97',par))

    for ifrm in range(par['nfrm']):
        tag = "%02d"%ifrm
        wplot.ifrmE2d(i+tag,i+'byt',ifrm,'',par)
    Result(i+'movie',[i+'%02d'%ifrm for ifrm in range(par['nfrm'])],'Movie')
    
End()
